{"version":3,"sources":["components/pokemonPage/PokemonPage.module.scss","components/header/Header.module.scss","components/pokemonsList/PokemonList.module.scss","components/move/PokemonMove.module.scss","components/home/Home.module.scss","components/pokemonCard/PokemonCard.module.scss","img/poke-logo.jpg","components/footer/Footer.module.scss","img/pikachu-removebg-preview.png","components/pokeStats/PokeStats.module.scss","components/strengthInfo/StrengthInfo.module.scss","components/abilityInfo/AbilityInfo.module.scss","img/typeIcons sync nonrecursive //.(svg)$","img/typeIcons/bug.svg","img/typeIcons/dark.svg","img/typeIcons/dragon.svg","img/typeIcons/electric.svg","img/typeIcons/fairy.svg","img/typeIcons/fighting.svg","img/typeIcons/fire.svg","img/typeIcons/flying.svg","img/typeIcons/ghost.svg","img/typeIcons/grass.svg","img/typeIcons/ground.svg","img/typeIcons/ice.svg","img/typeIcons/normal.svg","img/typeIcons/poison.svg","img/typeIcons/psychic.svg","img/typeIcons/rock.svg","img/typeIcons/steel.svg","img/typeIcons/water.svg","components/header/Header.jsx","components/main/Main.jsx","components/footer/Footer.jsx","hooks/usePokemonListData.js","components/pokemonsList/PokemonsList.jsx","components/home/Home.jsx","util/util.js","components/pokemonCard/PokemonCard.jsx","components/statBar/StatBar.jsx","components/pokeStats/PokeStats.jsx","hooks/usePokemonSpeciesData.js","hooks/usePokemonGeneralInfo.js","components/pokemonPage/PokemonPage.jsx","components/move/PokemonMove.jsx","hooks/usePokemonTypeIcon.js","components/type/Type.jsx","components/strengthInfo/StrengthInfo.jsx","components/abilityInfo/AbilityInfo.jsx","App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Header","className","styles","navbar","navbarContainer","src","logo","alt","navbarLogo","navbarTitle","navbarList","to","Main","path","exact","component","Home","PokemonsList","PokemonPage","Footer","footerRectangle","href","usePokemonListData","offset","useState","pokeInfo","setPokeInfo","hasNext","setHasNext","isLoading","setIsLoading","useEffect","rootUrl","URLSearchParams","a","fetch","response","json","results","next","Promise","all","name","url","resultResponse","pokeData","stats","front_default","sprites","other","dream_world","pokeInfoResult","prevPokeInfo","Set","fetchData","setOffset","useData","observer","useRef","lastObservablePokeCard","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevOffSet","parseInt","DOMElement","ReactDOM","findDOMNode","observe","pokemonListContainer","index","length","pathname","state","key","pokemonPageLink","ref","pokeName","pokeStats","pokePictureUrl","loadingSpinnerContainer","loadingSpinner","mainContentSection","mainContentContainer","pikachuBrand","mainContentText","firstLetterToUpperCase","word","substring","toUpperCase","PokemonCard","this","props","pokeNameFirstLetterUpperCased","cardContainer","cardStatsContainer","stat","baseStat","base_stat","statName","maxValueAvailable","Component","StatBar","scaledStat","Math","ceil","style","width","PokeStats","statNameFirstLetterUpperCased","cardStats","usePokemonSpeciesData","speciesInfo","setSpeciesInfo","specieInfoURL","mapEvolutionChain","evolutionChainData","chain","evolves_to","evolutionChain","species","i","push","j","capture_rate","color_name","color","evolution_chain_url","evolution_chain","flavor_text_entries","evolutionChainFetchResponse","evolutionChainFetchData","speciesDescription","flavor_text","usePokemonGeneralInfo","generalInfo","setGeneralInfo","pokeInfoURL","mapAbilityInfo","abilities","ability","abilityName","responseAbilityFetch","effect_entries","abilityDescription","effect","mapStrengthsInfo","types","type","responseTypeFetch","damage_relations","double_damage_from","double_damage_to","half_damage_from","half_damage_to","no_damage_from","no_damage_to","doubleDamageToNames","halfDamageFromNames","doubleDamageFromNames","halfDamageToNames","noDamageFromNames","noDamageToNames","strongAgainst","weakAgainst","neutralAgainst","reduceToUniqueStrengthsNames","strengthsInfo","reduce","acc","mapMovesInfo","moves","slice","move","moveName","moveAccuracy","accuracy","movePower","power","moveDescription","data","weight","height","pokeOwnTypes","abilityInfo","mappedStrengthsInfo","movesInfo","location","useSpeciesData","pokePageSection","pokePageContainer","profile","profileAvatarContainer","profileAvatar","basicInfoContainer","basicInfoDescription","basicInfoEvolutionChain","evolutionName","evolutionNameChanged","pokeType","typeWrapper","pokeOwnType","typeName","strengths","strengthsContainer","strengthAgainst","strengthType","abilityInfoWrapper","additionalInfo","PokemonMove","moveNameFirstLetterUppercased","moveContainer","movesMoveContainer","movesMoveStatsBarContainer","movesMoveStatsBar","usePokemonTypeIcon","iconName","image","setImage","r","requestedIcon","require","item","filter","iconPath","includes","Type","iconUrl","useTypeIcon","StrengthInfo","strengthWrapper","agaisntType","AbilityInfo","abilityNameFirstLetterUpperCased","abilityContainer","App","basename","process","render","document","querySelector"],"mappings":"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","file":"static/js/main.cbe611e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokePageSection\":\"PokemonPage_pokePageSection__2MyPD\",\"pokePageContainer\":\"PokemonPage_pokePageContainer__2fPf9\",\"pokeType\":\"PokemonPage_pokeType__2lN4w\",\"typeWrapper\":\"PokemonPage_typeWrapper__39xyK\",\"profile\":\"PokemonPage_profile__38Fa4\",\"profileAvatarContainer\":\"PokemonPage_profileAvatarContainer__CAq8n\",\"profileAvatar\":\"PokemonPage_profileAvatar__32Bwp\",\"basicInfoContainer\":\"PokemonPage_basicInfoContainer__pEeZv\",\"basicInfoDescription\":\"PokemonPage_basicInfoDescription__35Tes\",\"basicInfoEvolutionChain\":\"PokemonPage_basicInfoEvolutionChain__I_hJ_\",\"moves\":\"PokemonPage_moves__1hNoD\",\"additionalInfo\":\"PokemonPage_additionalInfo__3id7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__2GzfN\",\"navbarContainer\":\"Header_navbarContainer__166xP\",\"navbarLogo\":\"Header_navbarLogo__1jPpd\",\"navbarTitle\":\"Header_navbarTitle__1_0cG\",\"navbarList\":\"Header_navbarList__1UgIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonListContainer\":\"PokemonList_pokemonListContainer__1SQnm\",\"pokemonPageLink\":\"PokemonList_pokemonPageLink__1rJqH\",\"loadingSpinnerContainer\":\"PokemonList_loadingSpinnerContainer__l_4z7\",\"loadingSpinner\":\"PokemonList_loadingSpinner__mCZF3\",\"spinner\":\"PokemonList_spinner__1LFPn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveContainer\":\"PokemonMove_moveContainer__1TaB6\",\"movesMoveContainer\":\"PokemonMove_movesMoveContainer__1w1bm\",\"movesMoveStatsBarContainer\":\"PokemonMove_movesMoveStatsBarContainer__zRMnV\",\"movesMoveStatsBar\":\"PokemonMove_movesMoveStatsBar__1Jsap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContentSection\":\"Home_mainContentSection__4-yK5\",\"mainContentContainer\":\"Home_mainContentContainer__3v_EX\",\"mainContentText\":\"Home_mainContentText__dsiyY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"PokemonCard_cardContainer__2U_kY\",\"cardStatsContainer\":\"PokemonCard_cardStatsContainer__eZ6nU\"};","module.exports = __webpack_public_path__ + \"static/media/poke-logo.cc72fe69.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerRectangle\":\"Footer_footerRectangle__1qu5k\"};","module.exports = __webpack_public_path__ + \"static/media/pikachu-removebg-preview.07600455.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardStats\":\"PokeStats_cardStats__15FuP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"strengthWrapper\":\"StrengthInfo_strengthWrapper__1Sccq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"abilityContainer\":\"AbilityInfo_abilityContainer__1nOrC\"};","var map = {\n\t\"./bug.svg\": 52,\n\t\"./dark.svg\": 53,\n\t\"./dragon.svg\": 54,\n\t\"./electric.svg\": 55,\n\t\"./fairy.svg\": 56,\n\t\"./fighting.svg\": 57,\n\t\"./fire.svg\": 58,\n\t\"./flying.svg\": 59,\n\t\"./ghost.svg\": 60,\n\t\"./grass.svg\": 61,\n\t\"./ground.svg\": 62,\n\t\"./ice.svg\": 63,\n\t\"./normal.svg\": 64,\n\t\"./poison.svg\": 65,\n\t\"./psychic.svg\": 66,\n\t\"./rock.svg\": 67,\n\t\"./steel.svg\": 68,\n\t\"./water.svg\": 69\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 51;","module.exports = __webpack_public_path__ + \"static/media/bug.14540979.svg\";","module.exports = __webpack_public_path__ + \"static/media/dark.b7d4f578.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragon.18a1dbc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/electric.68b142da.svg\";","module.exports = __webpack_public_path__ + \"static/media/fairy.603e08d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/fighting.8ce4fa81.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire.33d14b30.svg\";","module.exports = __webpack_public_path__ + \"static/media/flying.8c1e094f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ghost.ff397345.svg\";","module.exports = __webpack_public_path__ + \"static/media/grass.d589dd00.svg\";","module.exports = __webpack_public_path__ + \"static/media/ground.289c4927.svg\";","module.exports = __webpack_public_path__ + \"static/media/ice.f82b7e5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/normal.8f2a7aaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/poison.183135e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/psychic.60982f05.svg\";","module.exports = __webpack_public_path__ + \"static/media/rock.499a0fa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/steel.95342da3.svg\";","module.exports = __webpack_public_path__ + \"static/media/water.e29fb8e3.svg\";","import React from \"react\";\nimport logo from \"./../../img/poke-logo.jpg\";\nimport styles from \"./Header.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n    return (\n        <header>\n            <nav className={styles.navbar}>\n                <div className={styles.navbarContainer}>\n                    <img src={logo} alt=\"Logo of the site which is a pokeball\" className={styles.navbarLogo} />\n                    <h1 className={styles.navbarTitle}>Find Your Favorites Pokémons Here</h1>\n                </div>\n                <ul className={styles.navbarList}>\n                    <Link to=\"/\">\n                        <li>Home</li>\n                    </Link>\n                    <Link to=\"/list\">\n                        <li>Poké List</li>\n                    </Link>\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { PokemonsList, Home, PokemonPage } from \"./../index\";\nimport \"./Main.module.scss\";\nconst Main = () => {\n    return (\n        <main>\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/list\" exact component={PokemonsList} />\n                <Route path=\"/list/*\" component={PokemonPage} />\n            </Switch>\n        </main>\n    );\n}\n\nexport default Main;","import React from \"react\";\nimport styles from \"./Footer.module.scss\";\n\nconst Footer = () => {\n    return (\n        <footer>\n            <div className={styles.footerRectangle}>\n               <h3>This site is just a sample built for learning purposes</h3> \n               <h3>Data provided by <a href=\"https://pokeapi.co\">Poke API</a></h3>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import { useEffect, useState } from \"react\";\n\nconst usePokemonListData = (offset) => {\n    const [pokeInfo, setPokeInfo] = useState([{}]);\n    const [hasNext, setHasNext] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const rootUrl = \"https://pokeapi.co/api/v2/pokemon/?\" + new URLSearchParams({ offset });\n        setIsLoading(true);\n        const fetchData = async () => {\n            const response = await fetch(rootUrl);\n            const { results, next } = await response.json();\n\n            const pokeInfoResult = await Promise.all(results.map(async ({ name, url }) => {\n                const resultResponse = await fetch(url);\n                const pokeData = await resultResponse.json();\n\n                const { stats, sprites: { other: { dream_world: { front_default } } } } = pokeData;\n\n                return { name, stats, front_default };\n            }))\n\n            setPokeInfo(prevPokeInfo => [...new Set([...prevPokeInfo, ...pokeInfoResult])]);\n            setHasNext(next !== null);\n            setIsLoading(false);\n        }\n\n        fetchData();\n\n    }, [offset]);\n\n    return { hasNext, pokeInfo, isLoading };\n}\n\nexport default usePokemonListData;","import React, { useState, useRef, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PokemonCard } from \"./../index\";\nimport useData from \"../../hooks/usePokemonListData\";\nimport styles from \"./PokemonList.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst PokemonsList = () => {\n    const [offset, setOffset] = useState(\"0\");\n    const { hasNext, pokeInfo, isLoading } = useData(offset);\n\n    const observer = useRef();\n    const lastObservablePokeCard = useCallback(node => {\n        if (isLoading) return;\n        if (observer.current) observer.current.disconnect();\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting && hasNext) {\n                setOffset(prevOffSet => parseInt(prevOffSet) + 20 + \"\");\n            }\n        });\n\n        const DOMElement = ReactDOM.findDOMNode(node);\n        if (DOMElement) observer.current.observe(DOMElement);\n\n    }, [hasNext, isLoading]);\n\n    return (\n        <section>\n            <div className={styles.pokemonListContainer}>\n                {pokeInfo.map(({ name, stats, front_default }, index) => {\n                    if (!name) {\n                        return null;\n                    }\n\n                    if (index === pokeInfo.length - 1) {\n                        return (\n                            <Link to={{\n                                pathname: `/list/${name}`,\n                                state: { name, front_default }\n                            }} key={name} className={styles.pokemonPageLink}>\n                                <PokemonCard ref={lastObservablePokeCard} key={index} pokeName={name} pokeStats={stats} pokePictureUrl={front_default} />\n                            </Link >\n                        );\n                    };\n                    \n                    return (\n                        <Link to={{\n                            pathname: `/list/${name}`,\n                            state: { name, front_default }\n                        }} key={name} className={styles.pokemonPageLink}>\n                            <PokemonCard key={index} pokeName={name} pokeStats={stats} pokePictureUrl={front_default} />\n                        </Link>\n                    );\n                })}\n            </div>\n            <div className={styles.loadingSpinnerContainer}>\n                {isLoading && (<div className={styles.loadingSpinner}></div>)}\n            </div>\n        </section >\n    );\n\n}\n\nexport default PokemonsList;","import React from \"react\";\nimport styles from \"./Home.module.scss\";\nimport pikachuBrand from \"./../../img/pikachu-removebg-preview.png\";\n\nconst Home = () => {\n    return (\n        <section className={styles.mainContentSection}>\n            <div className={styles.mainContentContainer}>\n                <img src={pikachuBrand} alt=\"Pikachu waving hand\" />\n                <div className={styles.mainContentText}>\n                    <h2>All Pokemons In One Place</h2>\n                    <p>Find status, moves and everything you want to know about your favorites pokemons.</p>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Home;","export const firstLetterToUpperCase = (word) => {\n    return word.substring(0, 1).toUpperCase() + word.substring(1);\n}","import React, { Component } from \"react\";\nimport styles from \"./PokemonCard.module.scss\";\nimport { PokeStats } from \"./../index\";\nimport { firstLetterToUpperCase } from \"./../../util/util\";\n\nclass PokemonCard extends Component {\n    render() {\n        const { pokeName, pokeStats, pokePictureUrl } = this.props;\n        if (!pokeName) { return null; }\n        const pokeNameFirstLetterUpperCased = firstLetterToUpperCase(pokeName);\n        return (\n            <div className={styles.cardContainer}>\n                <img src={pokePictureUrl} alt={`Representation of ${pokeName}`} />\n                <h4>{pokeNameFirstLetterUpperCased}</h4>\n                <div className={styles.cardStatsContainer}>\n                    {pokeStats.map((stats) => (\n                        <PokeStats key={stats.stat.name} baseStat={stats.base_stat} statName={stats.stat.name} maxValueAvailable={255} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PokemonCard;","import React from \"react\";\nimport \"./StatBar.scss\";\n\nconst StatBar = (props) => {\n    const { baseStat, statName, maxValueAvailable } = props;\n    const scaledStat = Math.ceil((baseStat * 100) / maxValueAvailable);\n    return (\n        <div className=\"bar-holder\">\n            <div className={`bar-filled bar-filled-${statName}`} style={{ width: `${scaledStat}%` }}>\n                <span>{baseStat}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default StatBar;","import React from \"react\";\nimport { StatBar } from \"./../index\";\nimport styles from \"./PokeStats.module.scss\";\nimport { firstLetterToUpperCase } from \"./../../util/util\";\n\nconst PokeStats = (props) => {\n    const { baseStat, statName, maxValueAvailable } = props;\n    const statNameFirstLetterUpperCased = firstLetterToUpperCase(statName);\n\n    return (\n        <div className={styles.cardStats}>\n            <span>{statNameFirstLetterUpperCased}</span>\n            <StatBar baseStat={baseStat} statName={statName} maxValueAvailable={maxValueAvailable} />\n        </div>\n    );\n}\n\nexport default PokeStats;","import { useState, useEffect, useCallback } from \"react\";\n\nconst usePokemonSpeciesData = (name) => {\n    const [speciesInfo, setSpeciesInfo] = useState([{}]);\n    const specieInfoURL = `https://pokeapi.co/api/v2/pokemon-species/${name}`;\n\n    const mapEvolutionChain = useCallback((evolutionChainData) => {\n        const { chain } = evolutionChainData;\n        const { evolves_to } = chain;\n\n        const evolutionChain = [chain.species.name];\n\n        for (let i = 0; i < evolves_to.length; i++) {\n            evolutionChain.push(evolves_to[i].species.name);\n            for (let j = 0; j < evolves_to[i].evolves_to.length; j++) {\n                evolutionChain.push(evolves_to[i].evolves_to[j].species.name);\n            }\n        }\n\n        return evolutionChain;\n    }, []);\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await fetch(specieInfoURL);\n            const { capture_rate, color: { name: color_name }, evolution_chain: { url: evolution_chain_url },\n                flavor_text_entries } = await response.json();\n\n            const evolutionChainFetchResponse = await fetch(evolution_chain_url);\n            const evolutionChainFetchData = await evolutionChainFetchResponse.json();\n            const evolutionChain = mapEvolutionChain(evolutionChainFetchData);\n\n            const speciesDescription = flavor_text_entries[6].flavor_text;\n\n            setSpeciesInfo({\n                capture_rate,\n                color_name,\n                evolutionChain,\n                speciesDescription\n            });\n        };\n        fetchData();\n    }, [specieInfoURL, name, mapEvolutionChain]);\n\n    return { speciesInfo };\n}\n\n\nexport default usePokemonSpeciesData;","import { useState, useEffect, useCallback } from \"react\";\n\nconst usePokemonGeneralInfo = (name) => {\n    const [generalInfo, setGeneralInfo] = useState([{}]);\n    const pokeInfoURL = `https://pokeapi.co/api/v2/pokemon/${name}`;\n\n    const mapAbilityInfo = useCallback((abilities) => {\n        return Promise.all(abilities.map(async ({ ability: { name: abilityName, url } }) => {\n            const responseAbilityFetch = await fetch(url);\n            const { effect_entries } = await responseAbilityFetch.json();\n            const abilityDescription = effect_entries[1].effect;\n            return { abilityName, abilityDescription };\n        }));\n    }, []);\n\n    const mapStrengthsInfo = useCallback((types) => {\n        return Promise.all(types.map(async ({ type: { name: typeName, url } }) => {\n            const responseTypeFetch = await fetch(url);\n            const { damage_relations: { double_damage_from, double_damage_to, half_damage_from, half_damage_to,\n                no_damage_from, no_damage_to } } = await responseTypeFetch.json();\n\n            const doubleDamageToNames = double_damage_to.map(({ name }) => name);\n            const halfDamageFromNames = half_damage_from.map(({ name }) => name);\n            const doubleDamageFromNames = double_damage_from.map(({ name }) => name);\n            const halfDamageToNames = half_damage_to.map(({ name }) => name);\n            const noDamageFromNames = no_damage_from.map(({ name }) => name);\n            const noDamageToNames = no_damage_to.map(({ name }) => name);\n\n            const strongAgainst = [...doubleDamageToNames, ...halfDamageFromNames];\n            const weakAgainst = [...doubleDamageFromNames, ...halfDamageToNames];\n            const neutralAgainst = [...noDamageFromNames, ...noDamageToNames];\n\n            return { strongAgainst, weakAgainst, neutralAgainst };\n        }));\n    }, []);\n\n    const reduceToUniqueStrengthsNames = useCallback((strengthsInfo) => {\n        return strengthsInfo.reduce((acc, { strongAgainst, weakAgainst, neutralAgainst }) => {\n            if (!acc[\"strongAgainst\"]) {\n                acc[\"strongAgainst\"] = [];\n                acc[\"weakAgainst\"] = [];\n                acc[\"neutralAgainst\"] = [];\n            }\n            acc[\"strongAgainst\"] = [...new Set([...acc[\"strongAgainst\"], ...strongAgainst])];\n            acc[\"weakAgainst\"] = [...new Set([...acc[\"weakAgainst\"], ...weakAgainst])];\n            acc[\"neutralAgainst\"] = [...new Set([...acc[\"neutralAgainst\"], ...neutralAgainst])];\n\n            return acc;\n        }, {});\n    }, []);\n\n    const mapMovesInfo = useCallback((moves) => {\n        return Promise.all(moves.slice(0, 10).map(async ({ move: { name: moveName, url } }) => {\n            const response = await fetch(url);\n            const { accuracy: moveAccuracy, power: movePower, flavor_text_entries } = await response.json();\n            const moveDescription = flavor_text_entries[6].flavor_text;\n            return { moveAccuracy, movePower, moveName, moveDescription };\n        }));\n    }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await fetch(pokeInfoURL);\n            const data = await response.json();\n            const { weight, height, abilities, moves, types } = data;\n\n            const pokeOwnTypes = types.map(({ type: { name } }) => name);\n            const abilityInfo = await mapAbilityInfo(abilities);\n            const mappedStrengthsInfo = await mapStrengthsInfo(types);\n            const strengthsInfo = reduceToUniqueStrengthsNames(mappedStrengthsInfo);\n            const movesInfo = await mapMovesInfo(moves);\n\n            setGeneralInfo({\n                abilityInfo,\n                weight,\n                height,\n                movesInfo,\n                strengthsInfo,\n                pokeOwnTypes\n            }\n            );\n        };\n        fetchData();\n    }, [pokeInfoURL, name, mapAbilityInfo, mapStrengthsInfo, reduceToUniqueStrengthsNames, mapMovesInfo]);\n\n\n    return { generalInfo };\n}\n\nexport default usePokemonGeneralInfo;","import React from \"react\";\n\nimport { PokemonMove, Type, StrengthInfo, AbilityInfo } from \"./../index\";\n\nimport styles from \"./PokemonPage.module.scss\";\n\nimport useSpeciesData from \"../../hooks/usePokemonSpeciesData\";\nimport usePokemonGeneralInfo from \"../../hooks/usePokemonGeneralInfo\";\n\nimport { firstLetterToUpperCase } from \"./../../util/util\";\n\n\nconst PokemonPage = (props) => {\n    const { location: { state: { front_default, name } } } = props;\n    \n    const { speciesInfo } = useSpeciesData(name);\n    const { capture_rate, color_name, evolutionChain, speciesDescription } = speciesInfo;\n\n    const { generalInfo } = usePokemonGeneralInfo(name);\n    const { abilityInfo, weight, height, movesInfo, strengthsInfo, pokeOwnTypes } = generalInfo;\n    const { strongAgainst, weakAgainst, neutralAgainst } = strengthsInfo || {};\n\n    return (\n        <section className={styles.pokePageSection}>\n            <div className={styles.pokePageContainer}>\n                <article className={styles.profile}>\n                    <div className={styles.profileAvatarContainer}>\n                        <div className={styles.profileAvatar}>\n                            <img src={front_default} alt=\"Pokémon Profile\" />\n                        </div>\n                        <h3>{firstLetterToUpperCase(name)}</h3>\n                    </div>\n                    <div className={styles.basicInfoContainer}>\n                        <div className={styles.basicInfoDescription}>\n                            <h2>Description</h2>\n                            <p>{speciesDescription}</p>\n                        </div>\n                        <div className={styles.basicInfoEvolutionChain}>\n                            <h2>Evolution Chain</h2>\n                            <p>{evolutionChain && evolutionChain.map((evolutionName, index) => {\n                                const evolutionNameChanged = firstLetterToUpperCase(evolutionName);\n                                return index !== evolutionChain.length - 1 ?\n                                    (<span key={evolutionName}>{evolutionNameChanged} {' => '} </span>) :\n                                    (<span key={evolutionName}>{evolutionNameChanged}.</span>)\n                            })}\n                            </p>\n                        </div>\n                        <div className={styles.pokeType}>\n                            <h2>Type(s)</h2>\n                            <div className={styles.typeWrapper}>\n                                {pokeOwnTypes && pokeOwnTypes.map(pokeOwnType => (<Type key={pokeOwnType} typeName={pokeOwnType} />))}\n                            </div>\n                        </div>\n                    </div>\n                </article>\n                <hr />\n                <article className={styles.strengths}>\n                    <div className={styles.strengthsContainer}>\n                        <div className={styles.strengthAgainst}>\n                            <h2>Strong Against</h2>\n                            {strongAgainst && <StrengthInfo strengthAgainst={strongAgainst} strengthType={\"strong\"} />}\n                        </div>\n                        <div className={styles.strengthAgainst}>\n                            <h2>Weak Against</h2>\n                            {weakAgainst && <StrengthInfo strengthAgainst={weakAgainst} strengthType={\"weak\"} />}\n                        </div>\n                        <div className={styles.strengthAgainst}>\n                            <h2>Neutral Against</h2>\n                            {neutralAgainst && <StrengthInfo strengthAgainst={neutralAgainst} strengthType={\"weak\"} />}\n                        </div>\n                    </div>\n                </article>\n                <hr />\n                <article className={styles.moves}>\n                    <h2>Moves</h2>\n                    <p>Here's a list of some moves that the Pokémon can naturally perform or learn to.</p>\n                    {movesInfo && movesInfo.map(({ moveAccuracy, movePower, moveName, moveDescription }) => {\n                        return (<PokemonMove key={moveName}\n                            moveAccuracy={moveAccuracy}\n                            movePower={movePower}\n                            moveName={moveName}\n                            moveDescription={moveDescription}\n                        />);\n                    })}\n                </article>\n                <hr />\n                <article className={styles.abilityInfo}>\n                    <div className={styles.abilityInfoWrapper}>\n                        <h2>Ability Info</h2>\n                        {abilityInfo && abilityInfo.map(({ abilityName, abilityDescription }) => {\n                            return (<AbilityInfo\n                                key={abilityName}\n                                abilityName={abilityName}\n                                abilityDescription={abilityDescription}\n                            />);\n                        })}\n                    </div>\n                </article>\n                <hr />\n                <article className={styles.additionalInfo}>\n                    <h2>Additional Information</h2>\n                    <p>Weight: {weight} kg</p>\n                    <p>Height: {height} dm</p>\n                    <p>Color: {color_name}</p>\n                    <p>Capture Rate: {capture_rate}%</p>\n                </article>\n            </div>\n        </section>\n    );\n\n}\n\nexport default PokemonPage;","import React from \"react\";\nimport { StatBar } from \"./../index\";\nimport styles from \"./PokemonMove.module.scss\";\nimport { firstLetterToUpperCase } from \"./../../util/util\";\n\nconst PokemonMove = ({ moveAccuracy, movePower, moveName, moveDescription }) => {\n    if (!moveAccuracy || !movePower || !moveName || !moveDescription) {\n        return null;\n    }\n    const moveNameFirstLetterUppercased = firstLetterToUpperCase(moveName);\n    return (\n        <div className={styles.moveContainer}>\n            <div className={styles.movesMoveContainer}>\n                <h3>{moveNameFirstLetterUppercased}</h3>\n                <p>{moveDescription}</p>\n                <div className={styles.movesMoveStatsBarContainer}>\n                    <div className={styles.movesMoveStatsBar}>\n                        <p>Power</p>\n                        <StatBar baseStat={movePower} statName={\"power\"} maxValueAvailable={120} />\n                    </div>\n                    <div className={styles.movesMoveStatsBar}>\n                        <p>Accuracy</p>\n                        <StatBar baseStat={`${moveAccuracy}%`} statName={\"accuracy\"} maxValueAvailable={100} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PokemonMove;","import { useState, useEffect } from \"react\";\n\nconst usePokemonTypeIcon = (iconName) => {\n    const [image, setImage] = useState([]);\n\n    useEffect(() => {\n        const importImages = (r) => {\n            return r.keys().map((item) => {\n                return r(item);\n            });\n        };\n\n        const importedIconsPaths = importImages(require.context(\"./../img/typeIcons\", false, /\\.(svg)$/));\n        const requestedIcon = importedIconsPaths.filter(iconPath => iconPath.includes(iconName));\n        setImage(requestedIcon);\n\n    }, [iconName]);\n\n    return image;\n}\n\n\nexport default usePokemonTypeIcon;","import React from \"react\";\n\nimport useTypeIcon from \"../../hooks/usePokemonTypeIcon\";\nimport \"./Type.scss\";\nimport { firstLetterToUpperCase } from \"./../../util/util\";\n\nconst Type = ({ typeName }) => {\n    const iconUrl = useTypeIcon(typeName);\n    return (\n        <div className=\"poketype-container\">\n            <div className={`icon ${typeName}`}>\n                <img src={iconUrl} alt={`Pokémon Type: ${typeName}`} />\n            </div>\n            <h4>{firstLetterToUpperCase(typeName)}</h4>\n        </div>\n    );\n};\n\nexport default Type;","import React from \"react\";\n// import styles from \"./../pokemonPage/PokemonPage.module.scss\";\nimport styles from \"./StrengthInfo.module.scss\";\nimport { Type } from \"./../index\";\n\nconst StrengthInfo = ({ strengthAgainst, strengthType }) => {\n    return (\n        <div className={styles.strengthWrapper}>\n            {strengthAgainst && strengthAgainst.length !== 0 ?\n                strengthAgainst.map(agaisntType => (<Type key={agaisntType} typeName={agaisntType} />))\n                : (<p>This pokemon is not naturally {strengthType} agaisnt any type.</p>)}\n        </div>\n    );\n}\n\nexport default StrengthInfo;","import React from \"react\";\nimport { firstLetterToUpperCase } from \"./../../util/util\";\nimport styles from \"./AbilityInfo.module.scss\";\n\nconst AbilityInfo = ({ abilityName, abilityDescription }) => {\n    const abilityNameFirstLetterUpperCased = firstLetterToUpperCase(abilityName);\n    return (\n        <div className={styles.abilityContainer}>\n            <h3>{abilityNameFirstLetterUpperCased}</h3>\n            <p>{abilityDescription}</p>\n        </div>\n    );\n};\n\nexport default AbilityInfo;","import React, { Component } from \"react\";\nimport { Header, Main, Footer } from \"./components/index\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Header />\n          <Main />\n          <Footer />\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}